<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
    <context:property-placeholder location="classpath:final.properties"/>
    
    <!--configure the dependency injection-->
    
    
    <!-- define the dependency here -->
	<bean id="myFortuneService"
	class="com.luv2code.springdemo.HappyFortuneService">
	</bean>
	
	<!-- behind the scenes after above defination,spring will perform the following -->
    <!-- HappyFortuneService myFortuneService = new HappyFortuneService(); --> 
	
	<!-- inject the dependency here -->
	<!-- any coach can define fortune -->

	<bean id="myCoach"
	class="com.luv2code.springdemo.TrackCoach">
  	<!-- set up your constructor injection  -->
  	<constructor-arg ref="myFortuneService"/>
	</bean>


	<!-- behind the scenes after above injection,spring will perform the following -->
	<!-- TrackCoach myCoach=new TrackCoach(myFortuneService) -->

	<bean id="myCricketCoach" 
	class="com.luv2code.springdemo.CricketCoach">
	<!-- set up setter injection -->
	<property name="fortuneService" ref="myFortuneService"/>
	
	<!-- inject values -->
	<!-- the emailAdress and team will call their respective setter methods in CricketCoach class -->
	<property name="emailAddress" value ="${email}"/>
	<property name="team" value="${team}"/>
	
	</bean>
</beans>

